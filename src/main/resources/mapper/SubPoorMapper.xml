<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mizhi.yxd.mapper.SubPoorMapper" >
  <resultMap id="BaseResultMap" type="com.mizhi.yxd.entity.SubPoor" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="county" property="county" jdbcType="VARCHAR" />
    <result column="village" property="village" jdbcType="VARCHAR" />
    <result column="cun" property="cun" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="build_card" property="buildCard" jdbcType="VARCHAR" />
    <result column="six_fifteen" property="sixFifteen" jdbcType="VARCHAR" />
    <result column="head_of_house_num" property="headOfHouseNum" jdbcType="VARCHAR" />
    <result column="head_of_house_name" property="headOfHouseName" jdbcType="VARCHAR" />
    <result column="head_of_house_id_card" property="headOfHouseIdCard" jdbcType="VARCHAR" />
    <result column="head_of_house_tel" property="headOfHouseTel" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="study_level" property="studyLevel" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="clazz" property="clazz" jdbcType="VARCHAR" />
    <result column="student_number" property="studentNumber" jdbcType="VARCHAR" />
    <result column="study_way" property="studyWay" jdbcType="VARCHAR" />
    <result column="if_disability" property="ifDisability" jdbcType="VARCHAR" />
    <result column="disability_number" property="disabilityNumber" jdbcType="VARCHAR" />
    <result column="not_in_school_reason" property="notInSchoolReason" jdbcType="VARCHAR" />
    <result column="poor_type" property="poorType" jdbcType="VARCHAR" />
    <result column="if_village" property="ifVillage" jdbcType="VARCHAR" />
    <result column="if_county" property="ifCounty" jdbcType="VARCHAR" />
    <result column="if_province" property="ifProvince" jdbcType="VARCHAR" />
    <result column="this_enjoy" property="thisEnjoy" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="semester" property="semester" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, province, county, village, cun, name, id_card, build_card, six_fifteen, head_of_house_num,
    head_of_house_name, head_of_house_id_card, head_of_house_tel, school, study_level, grade, clazz, student_number,
    study_way, if_disability, disability_number, not_in_school_reason, poor_type,
    if_village, if_county, if_province, this_enjoy, account, semester
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sub_poor
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByPoorIds">
    delete from sub_poor where id in
    <foreach collection="list" item="id" close=")" open="(" separator=",">
      #{id}
    </foreach>
  </delete>

  <insert id="insertBatch">
    insert into sub_poor (id, province, county,
    village, cun, name,
    id_card, build_card, six_fifteen, head_of_house_num,
    head_of_house_name,head_of_house_id_card, head_of_house_tel, school,
    study_level, grade, clazz,
    student_number, study_way, if_disability,
    disability_number, not_in_school_reason, poor_type,
    if_village, if_county, if_province,
    this_enjoy, account, semester)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.province,jdbcType=VARCHAR}, #{item.county,jdbcType=VARCHAR},
      #{item.village,jdbcType=VARCHAR}, #{item.cun,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
      #{item.idCard,jdbcType=VARCHAR},#{item.buildCard,jdbcType=VARCHAR}, #{item.sixFifteen,jdbcType=VARCHAR}, #{item.headOfHouseNum,jdbcType=VARCHAR},
      #{item.headOfHouseName,jdbcType=VARCHAR},#{item.headOfHouseIdCard,jdbcType=VARCHAR}, #{item.headOfHouseTel,jdbcType=VARCHAR}, #{item.school,jdbcType=VARCHAR},
      #{item.studyLevel,jdbcType=VARCHAR}, #{item.grade,jdbcType=VARCHAR}, #{item.clazz,jdbcType=VARCHAR},
      #{item.studentNumber,jdbcType=VARCHAR}, #{item.studyWay,jdbcType=VARCHAR}, #{item.ifDisability,jdbcType=VARCHAR},
      #{item.disabilityNumber,jdbcType=VARCHAR}, #{item.notInSchoolReason,jdbcType=VARCHAR}, #{item.poorType,jdbcType=VARCHAR},
      #{item.ifVillage,jdbcType=VARCHAR}, #{item.ifCounty,jdbcType=VARCHAR}, #{item.ifProvince,jdbcType=VARCHAR},
      #{item.thisEnjoy,jdbcType=VARCHAR}, #{item.account,jdbcType=VARCHAR}, #{item.semester,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <insert id="insertPoorInfo">
    insert into sub_poor (id, province, county,
    village, cun, name,
    id_card,build_card, six_fifteen, head_of_house_num,
    head_of_house_name,head_of_house_id_card, head_of_house_tel, school,
    study_level, grade, clazz,
    student_number, study_way, if_disability,
    disability_number, not_in_school_reason, poor_type,
    if_village, if_county, if_province,
    this_enjoy, account, semester) values
    (#{item.id,jdbcType=VARCHAR}, #{item.province,jdbcType=VARCHAR}, #{item.county,jdbcType=VARCHAR},
      #{item.village,jdbcType=VARCHAR}, #{item.cun,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
      #{item.idCard,jdbcType=VARCHAR},#{item.buildCard,jdbcType=VARCHAR}, #{item.sixFifteen,jdbcType=VARCHAR}, #{item.headOfHouseNum,jdbcType=VARCHAR},
      #{item.headOfHouseName,jdbcType=VARCHAR},#{item.headOfHouseIdCard,jdbcType=VARCHAR}, #{item.headOfHouseTel,jdbcType=VARCHAR}, #{item.school,jdbcType=VARCHAR},
      #{item.studyLevel,jdbcType=VARCHAR}, #{item.grade,jdbcType=VARCHAR}, #{item.clazz,jdbcType=VARCHAR},
      #{item.studentNumber,jdbcType=VARCHAR}, #{item.studyWay,jdbcType=VARCHAR}, #{item.ifDisability,jdbcType=VARCHAR},
      #{item.disabilityNumber,jdbcType=VARCHAR}, #{item.notInSchoolReason,jdbcType=VARCHAR}, #{item.poorType,jdbcType=VARCHAR},
      #{item.ifVillage,jdbcType=VARCHAR}, #{item.ifCounty,jdbcType=VARCHAR}, #{item.ifProvince,jdbcType=VARCHAR},
      #{item.thisEnjoy,jdbcType=VARCHAR}, #{item.account,jdbcType=VARCHAR}, #{item.semester,jdbcType=VARCHAR})
  </insert>

  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sub_poor
    where 1 = 1
    <if test="poor.account != null and poor.account != '' and poor.account != 'zzzx'">
      and account = #{poor.account}
    </if>
    <if test="poor.username != null and poor.username != ''">
        and name like  concat(concat('%',#{poor.username}),'%')
    </if>
    <if test="poor.idcard != null and poor.idcard != ''">
      and id_card=#{poor.idcard}
    </if>
    <if test="poor.studyLevel != null and poor.studyLevel != ''">
      and study_level=#{poor.studyLevel}
    </if>
    <if test="poor.semester != null and poor.semester != ''">
      and semester=#{poor.semester}
    </if>
    <if test="poor.province != null and poor.province != ''">
      and province=#{poor.province}
    </if>
    <if test="poor.county != null and poor.county != ''">
      and county=#{poor.county}
    </if>
    <if test="poor.village != null and poor.village != ''">
      and village=#{poor.village}
    </if>
    <if test="poor.cun != null and poor.cun != ''">
      and cun=#{poor.cun}
    </if>
    <if test="poor.thisEnjoy != null and poor.thisEnjoy != ''">
      and this_enjoy=#{poor.thisEnjoy}
    </if>
    <if test="poor.ids != null and poor.ids.size > 0">
      and id in
      <foreach collection="poor.ids" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>
  <select id="findCountByCondition" resultType="java.lang.Integer">
    select count(1)
    from sub_poor
    where 1 = 1
    <if test="poor.account != null and poor.account != '' and poor.account != 'zzzx'">
      and account = #{poor.account}
    </if>
    <if test="poor.username != null and poor.username != ''">
      and name like  concat(concat('%',#{poor.username}),'%')
    </if>
    <if test="poor.idcard != null and poor.idcard != ''">
      and id_card=#{poor.idcard}
    </if>
    <if test="poor.studyLevel != null and poor.studyLevel != ''">
      and study_level=#{poor.studyLevel}
    </if>
    <if test="poor.semester != null and poor.semester != ''">
      and semester=#{poor.semester}
    </if>
    <if test="poor.province != null and poor.province != ''">
      and province=#{poor.province}
    </if>
    <if test="poor.county != null and poor.county != ''">
      and county=#{poor.county}
    </if>
    <if test="poor.village != null and poor.village != ''">
      and village=#{poor.village}
    </if>
    <if test="poor.cun != null and poor.cun != ''">
      and cun=#{poor.cun}
    </if>
    <if test="poor.thisEnjoy != null and poor.thisEnjoy != ''">
      and this_enjoy=#{poor.thisEnjoy}
    </if>
    <if test="poor.ids != null and poor.ids.size > 0">
      and id in
      <foreach collection="poor.ids" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>

  <select id="selectByConditionWithPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sub_poor
    where 1 = 1
    <if test="poor.account != null and poor.account != ''  and poor.account != 'zzzx'">
      and account = #{poor.account}
    </if>
    <if test="poor.username != null and poor.username != ''">
      and name like  concat(concat('%',#{poor.username}),'%')
    </if>
    <if test="poor.idcard != null and poor.idcard != ''">
      and id_card=#{poor.idcard}
    </if>
    <if test="poor.studyLevel != null and poor.studyLevel != ''">
      and study_level=#{poor.studyLevel}
    </if>
    <if test="poor.semester != null and poor.semester != ''">
      and semester=#{poor.semester}
    </if>
    <if test="poor.province != null and poor.province != ''">
      and province=#{poor.province}
    </if>
    <if test="poor.county != null and poor.county != ''">
      and county=#{poor.county}
    </if>
    <if test="poor.village != null and poor.village != ''">
      and village=#{poor.village}
    </if>
    <if test="poor.cun != null and poor.cun != ''">
      and cun=#{poor.cun}
    </if>
    <if test="poor.thisEnjoy != null and poor.thisEnjoy != ''">
      and this_enjoy=#{poor.thisEnjoy}
    </if>
    <if test="poor.ids != null and poor.ids.size > 0">
      and id in
      <foreach collection="poor.ids" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
    limit #{map.start},#{map.pagesize}
  </select>

  <update id="updateByField">
    update sub_poor set ${poor.field} = #{poor.value} where id = #{poor.id} and account = #{poor.account}
  </update>
</mapper>